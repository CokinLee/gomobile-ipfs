---
name: Lint
on:
  pull_request:
    branches:
      - master

jobs:
  lint_editorconfig:
    name: Lint EditorConfig
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - name: Checkout changes
        uses: actions/checkout@v2

      - name: Lint EditorConfig
        uses: snow-actions/eclint@v1.0.1
        with:
          args: 'check'

  lint_markdown:
    name: Lint Markdown
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - name: Checkout changes
        uses: actions/checkout@v2

      - name: Lint Markdown
        uses: nosborn/github-action-markdown-cli@v1.1.1
        with:
          files: .
          ignore_files: CHANGELOG.md

  lint_yaml:
    name: Lint Yaml
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - name: Checkout changes
        uses: actions/checkout@v2

      - name: Lint Yaml
        uses: ibiqlik/action-yamllint@master
        with:
          strict: true
          config_data: |
            extends: default
            rules:
              line-length:
                max: 120
                level: warning
              truthy:
                allowed-values: ['true', 'false', 'on']

  lint_python:
    name: Lint Python
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - name: Checkout changes
        uses: actions/checkout@v2

      - name: Lint Python
        uses: andymckay/pycodestyle-action@0.1.3

  lint_java:
    name: Lint Java/Android
    runs-on: macos-latest
    timeout-minutes: 20
    steps:
      - name: Checkout changes
        uses: actions/checkout@v2

      # FIXME - used a patched go until #42655 is fixed
      # - name: Install Go
      #   uses: actions/setup-go@v1
      #   with:
      #     go-version: 1.15.5

      - name: FIXME - install patched go - golang/go/isssues/42655
        id: fix42655
        uses: actions/cache@v1
        with:
          path: ~/go-patch
          key: |
            ${{ runner.os }}-go-1.15.5-fix42655-1

      - name: FIXME - Build patched go
        if: steps.cache.outputs.fix42655-hit != 'true'
        run: |
          # download go 1.15.7 release
          wget --no-check-certificate --content-disposition \
              https://github.com/golang/go/tarball/go1.15.5 -O /tmp/go1.15.5.tar.gz
          # check sum
          test "$(shasum /tmp/go1.15.5.tar.gz | cut -d' ' -f1)" \
              = "c769762a1722e0107a985931fdbe8bfeb54697b6"
          # extract
          tar -xf /tmp/go1.15.5.tar.gz -C /tmp
          # move into /go
          mv /tmp/golang-go-c53315d $HOME/go-patch
          # apply patch
          patch -d $HOME/go-patch -p1 < ./third-party/go/issue-42655/1d78139128d6d839d7da0aeb10b3e51b6c7c0749.patch
          # install
          cd $HOME/go-patch/src && \
              sed -i 'run.bash.old' 's/.*ulimit -[Hc].*//g' run.bash && \
              ./make.bash
        shell: bash

      - name: FIXME - set new go path bin
        run: |
          echo "GOROOT=$HOME/go-patch" >> $GITHUB_ENV
          echo "$HOME/go-patch/bin:$PATH" > $GITHUB_PATH
        shell: bash

      - name: Set GOPATH in env
        run: |
          echo "GOPATH=$(go env GOPATH)" >> $GITHUB_ENV
          echo "$(go env GOPATH)/bin" >> $GITHUB_PATH
          mkdir -p $(go env GOPATH)/src/github.com/ipfs-shipyard
          ln -s $PWD $(go env GOPATH)/src/github.com/ipfs-shipyard/gomobile-ipfs
        shell: bash

      - name: Restore Go mod cache
        id: cache
        uses: actions/cache@v1
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('go/go.sum') }}

      - name: Install Go mod
        if: steps.cache.outputs.cache-hit != 'true'
        working-directory: go
        run: |
          GO111MODULE=on go mod vendor

      - name: Install Java
        uses: actions/setup-java@v1
        with:
          java-version: 1.8

      - name: Set TARGET_SDK in env
        run: |
          pip3 install -r packages/utils/manifest_get/requirements.txt
          export GET_BIN=packages/utils/manifest_get/manifest_get.py
          export GET_KEY=global.android.target_sdk_version
          echo "TARGET_SDK=$($GET_BIN $GET_KEY)" >> $GITHUB_ENV

      - name: Install Android SDK
        run:
          SDK_MAN=$HOME/Library/Android/sdk/tools/bin/sdkmanager;
          BTOOLS=$($SDK_MAN --list | grep "build-tools;$TARGET_SDK");
          BTOOL=$(echo $BTOOLS | tail -n1 | cut -d'|' -f1 | tr -d ' ');
          PLATFORMS=$($SDK_MAN --list | grep "platforms;android-$TARGET_SDK");
          PLATFORM=$(echo $PLATFORMS | tail -n1 | cut -d'|' -f1 | tr -d ' ');

          $SDK_MAN --install "$BTOOL" platform-tools "$PLATFORM" ndk-bundle
          > /dev/null

      - name: Build Go Core
        working-directory: packages
        run: make build_core.android GOMOBILE_TARGET=/amd64

      - name: Lint Java/Android
        working-directory: android
        run: ./gradlew lint

  lint_swift:
    name: Lint Swift
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - name: Checkout changes
        uses: actions/checkout@v2

      - name: Lint Swift
        uses: norio-nomura/action-swiftlint@3.1.0
        with:
          args: --strict ios/Bridge/GomobileIPFS

  lint_go:
    name: Lint Golang
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - name: Checkout changes
        uses: actions/checkout@v2

      - name: Install Go
        uses: actions/setup-go@v1
        with:
          go-version: 1.14

      - name: Install GolangCI-Lint
        working-directory: go
        run:
          curl -sSfL
          https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh
          | sh -s v1.23.7

      - name: Lint Golang
        working-directory: go
        run: ./bin/golangci-lint run -D unused --timeout 5m
